{"version":3,"sources":["components/Navigation/Tabs/LinkTab.js","components/Navigation/Tabs/TabPanel.js","components/Navigation/Tabs/NavTabs.js","utils/AxiosWithAuth.js","components/AuthPage.js","components/Navigation/PrivateRoute.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["LinkTab","props","Tab","component","onClick","event","preventDefault","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Box","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","NavTabs","history","useHistory","classes","tabOrder","findTab","tabs","find","o","link","location","pathname","useState","setValue","className","AppBar","position","Tabs","variant","onChange","newValue","push","target","innerText","toLowerCase","aria-label","name","map","tab","key","label","href","a11yProps","panel","AxiosWithAuth","token","localStorage","getItem","axios","create","baseURL","headers","Authorization","withRouter","baseSchemaFields","email","yup","required","password","loginSchema","shape","registerSchema","currentRoute","split","currentSchema","errorState","setErrorState","creds","setCreds","handleChange","e","persist","validate","then","valid","catch","err","errors","login","post","res","setItem","data","console","log","register","baseFields","TextField","type","data-cy","length","FormHelperText","registerFields","submitButton","text","dataCy","Button","color","loginForm","initialValues","onSubmit","validationSchema","registerForm","PrivateRoute","Component","rest","render","to","Home","App","path","AuthPage","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"0ZAeeA,MAZf,SAAiBC,GACf,OACE,kBAACC,EAAA,EAAD,eACEC,UAAU,IACVC,QAAS,SAACC,GACRA,EAAMC,mBAEJL,K,iBCaKM,MApBf,SAAkBN,GAAQ,IAChBO,EAAqCP,EAArCO,SAAUC,EAA2BR,EAA3BQ,MAAOC,EAAoBT,EAApBS,MAAUC,EADZ,YACsBV,EADtB,8BAGvB,OACE,uCACEW,KAAK,WACLC,OAAQJ,IAAUC,EAClBI,GAAE,uBAAkBJ,GACpBK,kBAAA,kBAA4BL,IACxBC,GAEHF,IAAUC,GACT,kBAACM,EAAA,EAAD,KACGR,KCCX,IAAMS,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,gBAAiBH,EAAMI,QAAQC,WAAWC,WA0C/BC,MAtCf,SAAiBzB,GACf,IAAI0B,EAAUC,cACRC,EAAUZ,IACZa,EAAW,EACTC,EAAU9B,EAAM+B,KAAKC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAASR,EAAQS,SAASC,YAC7DN,IACFD,EAAWC,EAAQD,UANC,MAQIQ,mBAASR,GARb,mBAQfrB,EARe,KAQR8B,EARQ,KAetB,OACE,yBAAKC,UAAWX,EAAQT,MACtB,kBAACqB,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CACEC,QAAQ,YACRnC,MAAOA,EACPoC,SAXmB,SAACxC,EAAOyC,GACjCnB,EAAQoB,KAAK1C,EAAM2C,OAAOC,UAAUC,eACpCX,EAASO,IAUHK,aAAA,UAAelD,EAAMmD,KAArB,UAECnD,EAAM+B,KAAKqB,KAAI,SAACC,EAAK5C,GAAN,OACd,kBAAC,EAAD,eAAS6C,IAAK7C,EAAO8C,MAAOF,EAAIE,MAAOC,KAAMH,EAAInB,MAvC7D,SAAmBzB,GACjB,MAAO,CACLI,GAAG,WAAD,OAAaJ,GACf,gBAAgB,gBAAhB,OAAiCA,IAoCkCgD,CAAUhD,UAI1ET,EAAM+B,KAAKqB,KAAI,SAACC,EAAK5C,GAAN,OACd,kBAAC,EAAD,CAAU6C,IAAK7C,EAAOD,MAAOA,EAAOC,MAAO4C,EAAIxB,UAC5CwB,EAAIK,Y,2BC1CAC,EAXO,WACpB,IAAMC,EAAQC,aAAaC,QAAQ,SAEnC,OAAOC,IAAMC,OAAO,CAClBC,QAAS,4DACTC,QAAS,CACPC,cAAeP,MC+LNQ,mBAvLf,SAAkBpE,GAChB,IAAMqE,EAAmB,CACvBC,MAAOC,MAEJD,MAAM,kCACNE,SAAS,sCACZC,SAAUF,MAAaC,SAAS,gCAG5BE,EAAcH,MAAaI,MAAMN,GAEjCO,EAAiBL,MAAaI,MAAb,2BAClBN,GADkB,IAErBlB,KAAMoB,MAEHC,SAAS,kCAIVK,EADUlD,cACaQ,SAASC,SAAS0C,MAAM,KAAK,GACpDC,EAAgBL,EACC,aAAjBG,IACFE,EAAgBH,GAtBK,MAyBavC,mBAAS,CAC3CiC,MAAO,GACPnB,KAAM,GACNsB,SAAS,KA5BY,mBAyBhBO,EAzBgB,KAyBJC,EAzBI,OAmDG5C,mBAAS,CACjCc,KAAM,GACNmB,MAAO,GACPG,SAAU,KAtDW,mBAmDhBS,EAnDgB,KAmDTC,EAnDS,KAyDjBC,EAAe,SAACC,GACpBA,EAAEC,UA1Ba,SAACD,GAChB,IAAM7E,EAAQ6E,EAAEtC,OAAOvC,MACvB+D,IACSQ,EAAeM,EAAEtC,OAAOI,MAC9BoC,SAAS/E,GACTgF,MAAK,SAACC,GACLR,EAAc,2BACTD,GADQ,kBAEVK,EAAEtC,OAAOI,KAAO,SAGpBuC,OAAM,SAACC,GACNV,EAAc,2BACTD,GADQ,kBAEVK,EAAEtC,OAAOI,KAAOwC,EAAIC,OAAO,SAalCL,CAASF,GACTF,EAAS,2BACJD,GADG,kBAELG,EAAEtC,OAAOI,KAAOkC,EAAEtC,OAAOvC,UAIxBqF,EAAQ,SAACzF,GACbA,EAAMC,iBACNsD,IACGmC,KAAK,aAAcZ,GACnBM,MAAK,SAACO,GACLlC,aAAamC,QAAQ,QAASD,EAAIE,KAAKrC,OACvC5D,EAAM0B,QAAQoB,KAAK,oBAEpB4C,OAAM,SAACC,GACNO,QAAQC,IAAI,WAAYR,OAIxBS,EAAW,SAACf,GAChBA,EAAEhF,iBACFsD,IACGmC,KAAK,gBAAiBZ,GACtBM,MAAK,SAACO,GACLlC,aAAamC,QAAQ,QAASD,EAAIE,KAAKrC,OACvC5D,EAAM0B,QAAQoB,KAAK,oBAEpB4C,OAAM,SAACC,GACNO,QAAQC,IAAI,WAAYR,OAIxBU,EACJ,oCACA,kBAACC,EAAA,EAAD,CACEzF,GAAG,QACH0C,MAAM,QACNgD,KAAK,QACLpD,KAAK,QACLR,QAAQ,WACR6D,UAAQ,cACRhG,MAAO0E,EAAMZ,MACb1B,SAAUwC,IAEXJ,EAAWV,MAAMmC,OAAS,EAAI,kBAACC,EAAA,EAAD,KAAiB1B,EAAWV,OAA0B,KACrF,kBAACgC,EAAA,EAAD,CACEzF,GAAG,WACH0C,MAAM,WACNgD,KAAK,WACLpD,KAAK,WACLR,QAAQ,WACR6D,UAAQ,iBACRhG,MAAO0E,EAAMT,SACb7B,SAAUwC,IAEXJ,EAAWP,SAASgC,OAAS,EAAI,kBAACC,EAAA,EAAD,KAAiB1B,EAAWP,UAA6B,MAIvFkC,EACJ,oCACA,kBAACL,EAAA,EAAD,CACEzF,GAAG,OACH0C,MAAM,OACNgD,KAAK,OACLpD,KAAK,OACLR,QAAQ,WACR6D,UAAQ,aACRhG,MAAO0E,EAAM/B,KACbP,SAAUwC,IAEXJ,EAAW7B,KAAKsD,OAAS,EAAI,kBAACC,EAAA,EAAD,KAAiB1B,EAAW7B,MAAyB,KAClFkD,GAIGO,EAAe,SAACC,EAAMC,GAAP,OACnB,kBAACC,EAAA,EAAD,CAAQR,KAAK,SAAS5D,QAAQ,YAAYqE,MAAM,UAAUR,UAASM,GAChED,IAICI,EACJ,kBAAC,IAAD,CACEC,cAAehC,EACfiC,SAAUtB,EACVuB,iBAAkB1C,GAElB,0BAAMyC,SAAUtB,GACd,yBAAKtD,UAAU,aACd8D,EACAO,EAAa,SAAU,YAMxBS,EACJ,kBAAC,IAAD,CACEH,cAAehC,EACfiC,SAAUf,EACVgB,iBAAkBxC,GAElB,0BAAMuC,SAAUf,GACd,yBAAK7D,UAAU,aACZoE,EACAC,EAAa,WAAY,eAMlC,OACE,6BAASrE,UAAU,kBACjB,kBAAC,EAAD,CACER,KAAM,CACJ,CAAEwB,MAAO,QAASrB,KAAM,SAAUwB,MAAOuD,EAAWpF,SAAU,GAC9D,CAAE0B,MAAO,WAAYrB,KAAM,YAAawB,MAAO2D,EAAcxF,SAAU,UChLlEyF,G,OAdM,SAAC,GAAuC,IAA1BC,EAAyB,EAApCrH,UAAyBsH,EAAW,6BAC1D,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAzH,GACN,OAAI6D,aAAaC,QAAQ,SAChB,kBAACyD,EAAcvH,GAEjB,kBAAC,IAAD,CAAU0H,GAAG,iBCNbC,MAHf,WACE,OAAO,qECyBMC,MApBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKrF,UAAU,OACb,yBAAKA,UAAU,kBAGf,yBAAKA,UAAU,UACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsF,KAAK,SAAS3H,UAAW4H,IAChC,kBAAC,IAAD,CAAOD,KAAK,YAAY3H,UAAW4H,IACnC,kBAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,IAAI3H,UAAW4H,IACjC,kBAAC,EAAD,CAAcD,KAAK,gBAAgB3H,UAAWyH,SCRtCK,QACW,cAA7BC,OAAO9F,SAAS+F,UAEe,UAA7BD,OAAO9F,SAAS+F,UAEhBD,OAAO9F,SAAS+F,SAASC,MACvB,2DCZNC,IAASX,OACP,kBAAC,IAAMY,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlD,MAAK,SAAAmD,GACJA,EAAaC,gBAEdlD,OAAM,SAAAmD,GACL3C,QAAQ2C,MAAMA,EAAMC,c","file":"static/js/main.97a65d04.chunk.js","sourcesContent":["import React from 'react';\nimport { Tab } from '@material-ui/core';\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={(event) => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nexport default LinkTab;","import React from 'react';\nimport { Box } from '@material-ui/core';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport default TabPanel;\n","import React, { useState } from 'react';\nimport {\n  makeStyles,\n  AppBar,\n  Tabs\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport LinkTab from './LinkTab';\nimport TabPanel from './TabPanel';\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction NavTabs(props) {\n  let history = useHistory();\n  const classes = useStyles();\n  let tabOrder = 0;\n  const findTab = props.tabs.find(o => o.link === history.location.pathname);\n  if (findTab) {\n    tabOrder = findTab.tabOrder;\n  }\n  const [value, setValue] = useState(tabOrder);\n\n  const handleCallToRouter = (event, newValue) => {\n    history.push(event.target.innerText.toLowerCase());\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleCallToRouter}\n          aria-label={`${props.name} tabs`}\n        >\n          {props.tabs.map((tab, index) => (\n            <LinkTab key={index} label={tab.label} href={tab.link} {...a11yProps(index)} />\n          ))}\n        </Tabs>\n      </AppBar>\n      {props.tabs.map((tab, index) => (\n        <TabPanel key={index} value={value} index={tab.tabOrder}>\n          {tab.panel}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n\nexport default NavTabs;\n","import axios from 'axios';\n\nconst AxiosWithAuth = () => {\n  const token = localStorage.getItem('token');\n\n  return axios.create({\n    baseURL: 'https://webunit4-secret-family-recipes.herokuapp.com/api/',\n    headers: {\n      Authorization: token,\n    },\n  });\n};\n\nexport default AxiosWithAuth;\n","import React, { useState } from 'react';\n\nimport {\n  Button,\n  TextField,\n  FormHelperText\n} from '@material-ui/core';\nimport * as yup from 'yup';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport '../css/AuthPage.css';\nimport NavTabs from './Navigation/Tabs/NavTabs';\nimport { Formik } from 'formik';\n\nimport AxiosWithAuth from '../utils/AxiosWithAuth';\n\n//Form Validation Schema\nfunction AuthPage(props) {\n  const baseSchemaFields = {\n    email: yup\n      .string()\n      .email('Must be a Valid email address.')\n      .required('You must include an email address.'),\n    password: yup.string().required('Please enter your password.'),\n  };\n\n  const loginSchema = yup.object().shape(baseSchemaFields);\n\n  const registerSchema = yup.object().shape({\n    ...baseSchemaFields,\n    name: yup\n      .string()\n      .required('You must include your name.')\n  });\n\n  let history = useHistory();\n  let currentRoute = history.location.pathname.split('/')[1];\n  let currentSchema = loginSchema;\n  if (currentRoute === 'register') {\n    currentSchema = registerSchema;\n  }\n  //Setting Error State for validation errors.\n  const [errorState, setErrorState] = useState({\n    email: '',\n    name: '',\n    password:'',\n  });\n\n  //Form Validation check\n  const validate = (e) => {\n    const value = e.target.value;\n    yup\n      .reach(currentSchema, e.target.name)\n      .validate(value)\n      .then((valid) => {\n        setErrorState({\n          ...errorState,\n          [e.target.name]: '',\n        });\n      })\n      .catch((err) => {\n        setErrorState({\n          ...errorState,\n          [e.target.name]: err.errors[0],\n        });\n      });\n  };\n\n  const [creds, setCreds] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const handleChange = (e) => {\n    e.persist();\n    validate(e);\n    setCreds({\n      ...creds,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const login = (event) => {\n    event.preventDefault();\n    AxiosWithAuth()\n      .post('auth/login', creds)\n      .then((res) => {\n        localStorage.setItem('token', res.data.token);\n        props.history.push('/recipes-home');\n      })\n      .catch((err) => {\n        console.log('Err is: ', err);\n      });\n  };\n\n  const register = (e) => {\n    e.preventDefault();\n    AxiosWithAuth()\n      .post('auth/register', creds)\n      .then((res) => {\n        localStorage.setItem('token', res.data.token);\n        props.history.push('/recipes-home');\n      })\n      .catch((err) => {\n        console.log('Err is: ', err);\n      });\n  };\n\n  const baseFields = (\n    <>\n    <TextField\n      id='email'\n      label='email'\n      type='email'\n      name='email'\n      variant='outlined'\n      data-cy='email-input'\n      value={creds.email}\n      onChange={handleChange}\n    />\n    {errorState.email.length > 0 ? <FormHelperText>{errorState.email}</FormHelperText> : null}\n    <TextField\n      id='password'\n      label='password'\n      type='password'\n      name='password'\n      variant='outlined'\n      data-cy='password-input'\n      value={creds.password}\n      onChange={handleChange}\n    />\n    {errorState.password.length > 0 ? <FormHelperText>{errorState.password}</FormHelperText> : null}\n    </>\n  );\n\n  const registerFields = (\n    <>\n    <TextField\n      id='name'\n      label='name'\n      type='text'\n      name='name'\n      variant='outlined'\n      data-cy='name-input'\n      value={creds.name}\n      onChange={handleChange}\n    />\n    {errorState.name.length > 0 ? <FormHelperText>{errorState.name}</FormHelperText> : null}\n    {baseFields}\n    </>\n  );\n\n  const submitButton = (text, dataCy) => (\n    <Button type='submit' variant='contained' color='primary' data-cy={dataCy}>\n      {text}\n    </Button>\n  );\n\n  const loginForm = (\n    <Formik\n      initialValues={creds}\n      onSubmit={login}\n      validationSchema={loginSchema}\n    >\n      <form onSubmit={login}>\n        <div className='authInput'>\n        {baseFields}\n        {submitButton('Log in', 'login')}\n        </div>\n      </form>\n    </Formik>\n  );\n\n  const registerForm = (\n    <Formik\n      initialValues={creds}\n      onSubmit={register}\n      validationSchema={registerSchema}\n    >\n      <form onSubmit={register}>\n        <div className='authInput'>\n          {registerFields}\n          {submitButton('Register', 'register')}\n        </div>\n      </form>\n    </Formik>\n  );\n\n  return (\n    <section className='loginContainer'>\n      <NavTabs\n        tabs={[\n          { label: 'Login', link: '/login', panel: loginForm, tabOrder: 0 },\n          { label: 'Register', link: '/register', panel: registerForm, tabOrder: 1 },\n        ]}\n      />\n    </section>\n  );\n}\nexport default withRouter(AuthPage);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (localStorage.getItem(\"token\")) {\n          return <Component {...props} />;\n        }\n        return <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\n\nfunction Home() {\n  return <div>Remove this when writing this page!</div>;\n}\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport AuthPage from './components/AuthPage';\nimport './App.css';\n\nimport PrivateRoute from './components/Navigation/PrivateRoute';\n// import Header from './components/Header';\nimport Home from './components/Home';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className='App'>\n        <div className='nav-container'>\n          {/* <Header /> */}\n        </div>\n        <div className='routes'>\n          <Switch>\n            <Route path='/login' component={AuthPage} />\n            <Route path='/register' component={AuthPage} />\n            <Route exact path='/' component={AuthPage} />\n            <PrivateRoute path='/recipes-home' component={Home} />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}