{"version":3,"sources":["components/Field/index.js","components/AuthPage/Form.js","components/Navigation/Tabs/LinkTab.js","components/Navigation/Tabs/TabPanel.js","components/Navigation/Tabs/NavTabs.js","components/AuthPage/index.js","components/Navigation/PrivateRoute.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Field","props","name","fieldTypes","label","values","errors","touched","handleChange","TextField","helperText","error","Boolean","type","value","onChange","variant","data-cy","AuthForm","action","buttonLabel","handleSubmit","isValid","onSubmit","className","Object","keys","map","key","Button","color","disabled","LinkTab","Tab","component","onClick","event","preventDefault","TabPanel","children","index","other","role","hidden","id","aria-labelledby","Box","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","NavTabs","tabs","history","useHistory","classes","tabOrder","findTab","find","o","process","link","location","pathname","useState","setValue","AppBar","position","Tabs","newValue","push","target","innerText","toLowerCase","aria-label","tab","href","panel","withRouter","baseSchemaFields","email","yup","required","password","loginSchema","shape","registerSchema","auth","console","log","baseFields","baseFieldTypes","loginForm","initialValues","validationSchema","loginProps","registerForm","regProps","PrivateRoute","Component","rest","render","localStorage","getItem","to","Home","App","path","AuthPage","exact","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2abfb230.chunk.js","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nconst Field = (props) => {\n  const {\n    name,\n    fieldTypes,\n    label,\n    values,\n    errors,\n    touched,\n    handleChange,\n  } = props;\n\n  return (\n    <TextField\n      name={name}\n      helperText={touched[name] ? errors[name] : ''}\n      error={touched[name] && Boolean(errors[name])}\n      type={fieldTypes[name]}\n      label={label}\n      value={values[name]}\n      onChange={handleChange}\n      variant=\"outlined\"\n      data-cy={`${name}-input`}\n    />\n  );\n};\n\nexport default Field;\n","import React from 'react';\n// import { Button, TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport Field from '../Field';\n\nconst AuthForm = (props) => {\n  const {\n    values,\n    action,\n    buttonLabel,\n    handleSubmit,\n    isValid,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"authInput\">\n        {Object.keys(values).map((key) => (\n          <Field\n            key={key}\n            label={key}\n            name={key}\n            {...props}\n          />\n        ))}\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!isValid}\n          data-cy={`${action}-input`}\n        >\n          {buttonLabel}\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { Tab } from '@material-ui/core';\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={(event) => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nexport default LinkTab;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport default TabPanel;\n","import React, { useState } from 'react';\nimport {\n  makeStyles,\n  AppBar,\n  Tabs,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport LinkTab from './LinkTab';\nimport TabPanel from './TabPanel';\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction NavTabs(props) {\n  const {\n    tabs,\n    name,\n  } = props;\n  const history = useHistory();\n  const classes = useStyles();\n  let tabOrder = 0;\n  const publicUrl = process.env.PUBLIC_URL;\n  const findTab = tabs.find((o) => `${publicUrl}${o.link}` === history.location.pathname);\n  if (findTab) {\n    tabOrder = findTab.tabOrder;\n  }\n  const [value, setValue] = useState(tabOrder);\n\n  const handleCallToRouter = (event, newValue) => {\n    history.push(`${publicUrl}/${event.target.innerText.toLowerCase()}`);\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleCallToRouter}\n          aria-label={`${name} tabs`}\n        >\n          {tabs.map((tab) => (\n            <LinkTab\n              key={tab.tabOrder}\n              label={tab.label}\n              href={tab.link}\n              {...a11yProps(tab.tabOrder)}\n            />\n          ))}\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab) => (\n        <TabPanel key={tab.tabOrder} value={value} index={tab.tabOrder}>\n          {tab.panel}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n\nexport default NavTabs;\n","import React from 'react';\nimport * as yup from 'yup';\nimport { withRouter } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport AuthForm from './Form';\nimport '../../css/AuthPage.css';\nimport NavTabs from '../Navigation/Tabs/NavTabs';\n// import AxiosWithAuth from '../../utils/AxiosWithAuth';\n\n// function AuthPage(props) {\nfunction AuthPage() {\n  const baseSchemaFields = {\n    email: yup\n      .string()\n      .email('Must be a Valid email address.')\n      .required('You must include an email address.'),\n    password: yup.string().required('Please enter your password.'),\n  };\n\n  const loginSchema = yup.object().shape(baseSchemaFields);\n\n  const registerSchema = yup.object().shape({\n    ...baseSchemaFields,\n    name: yup\n      .string()\n      .required('You must include your name.'),\n  });\n\n  const auth = (values, action) => {\n    console.log({ values, action });\n    // AxiosWithAuth()\n    //   .post(`auth/${action}`, creds)\n    //   .then((res) => {\n    //     localStorage.setItem('token', res.data.token);\n    //     props.history.push('/recipes-home');\n    //   })\n    //   .catch((err) => {\n    //     console.log('Err is: ', err);\n    //   });\n  };\n\n  const baseFields = {\n    email: '',\n    password: '',\n  };\n\n  const baseFieldTypes = {\n    email: 'email',\n    password: 'password',\n  };\n\n  const loginForm = (\n    <Formik\n      initialValues={baseFields}\n      validationSchema={loginSchema}\n      onSubmit={(values) => auth(values, 'login')}\n      // onSubmit={login}\n    >\n      {(loginProps) => (\n        <AuthForm\n          action=\"login\"\n          buttonLabel=\"Login\"\n          fieldTypes={baseFieldTypes}\n          {...loginProps}\n        />\n      )}\n    </Formik>\n  );\n\n  const registerForm = (\n    <Formik\n      initialValues={{ name: '', ...baseFields }}\n      validationSchema={registerSchema}\n      onSubmit={(values) => auth(values, 'register')}\n      // onSubmit={register}\n    >\n      {(regProps) => (\n        <AuthForm\n          action=\"register\"\n          buttonLabel=\"Register\"\n          fieldTypes={{ name: 'text', ...baseFieldTypes }}\n          {...regProps}\n        />\n      )}\n    </Formik>\n  );\n\n  return (\n    <section className=\"loginContainer\">\n      <NavTabs\n        tabs={[\n          {\n            label: 'Login',\n            link: '/login',\n            panel: loginForm,\n            tabOrder: 0,\n          },\n          {\n            label: 'Register',\n            link: '/register',\n            panel: registerForm,\n            tabOrder: 1,\n          },\n        ]}\n      />\n    </section>\n  );\n}\n\nexport default withRouter(AuthPage);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      if (localStorage.getItem('token')) {\n        return <Component {...props} />;\n      }\n      return <Redirect to=\"/login\" />;\n    }}\n  />\n);\n\nexport default PrivateRoute;\n","import React from 'react';\n\nfunction Home() {\n  return <div>Remove this when writing this page!</div>;\n}\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport AuthPage from './components/AuthPage';\nimport './App.css';\n\nimport PrivateRoute from './components/Navigation/PrivateRoute';\n// import Header from './components/Header';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className=\"nav-container\">\n          {/* <Header /> */}\n        </div>\n        <div className=\"routes\">\n          <Switch>\n            <Route path={`${process.env.PUBLIC_URL}/login`} component={AuthPage} />\n            <Route path={`${process.env.PUBLIC_URL}/register`} component={AuthPage} />\n            <Route path={`${process.env.PUBLIC_URL}/test`} component={AuthPage} />\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={AuthPage} />\n            <PrivateRoute path={`${process.env.PUBLIC_URL}/recipes-home`} component={Home} />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}